{"ast":null,"code":"var _jsxFileName = \"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/randomChar/RandomChar.js\";\nimport { Component } from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { render } from '@testing-library/react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RandomChar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      char: {},\n      loading: true\n    };\n    this.marvelService = new MarvelService();\n    this.onCharLoaded = char => {\n      this.setState({\n        char\n      });\n    };\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.marvelService.getCharacter(id).then(this.onCharLoaded);\n    };\n    this.updateChar();\n  }\n  render() {\n    const {\n      char: {\n        name,\n        description,\n        thumbnail,\n        homepage,\n        wiki\n      },\n      loading\n    } = this.state;\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 52\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst View = ({\n  char\n}) => {\n  return {};\n};\n_c = View;\nexport default RandomChar;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["Component","mjolnir","render","MarvelService","Spinner","jsxDEV","_jsxDEV","RandomChar","constructor","props","state","char","loading","marvelService","onCharLoaded","setState","updateChar","id","Math","floor","random","getCharacter","then","name","description","thumbnail","homepage","wiki","fileName","_jsxFileName","lineNumber","columnNumber","className","children","src","alt","View","_c","$RefreshReg$"],"sources":["/Users/hellojenny/Desktop/projects/react project/marvel/src/components/randomChar/RandomChar.js"],"sourcesContent":["import { Component } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { render } from '@testing-library/react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props);\n        this.updateChar();\n    }\n\n    state = {\n        char: {},\n        loading: true\n    }\n\nmarvelService = new MarvelService();\n\nonCharLoaded = (char) => {\n    this.setState({char})\n}\n\nupdateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.marvelService\n        .getCharacter(id)\n        .then(this.onCharLoaded)\n}\n\n    render () {\n        const {char: {name, description, thumbnail, homepage, wiki}, loading} = this.state;\n\n        if (loading) {\n            return <Spinner/>\n        }\n\n        return (\n            <div className=\"randomchar\">\n                \n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n\n    return {\n        \n    }\n}\n\nexport default RandomChar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}