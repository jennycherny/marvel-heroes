[{"/Users/hellojenny/Desktop/projects/react project/marvel/src/index.js":"1","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/app/App.js":"2","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/appHeader/AppHeader.js":"3","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/index.js":"4","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/MainPage.js":"5","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/ComicsPage.js":"6","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/charList/CharList.js":"7","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/randomChar/RandomChar.js":"8","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/charInfo/CharInfo.js":"9","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/errorBoundary/ErrorBoundary.js":"10","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/appBanner/AppBanner.js":"11","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/comicsList/ComicsList.js":"12","/Users/hellojenny/Desktop/projects/react project/marvel/src/services/MarvelService.js":"13","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/errorMessage/ErrorMessage.js":"14","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/skeleton/Skeleton.js":"15","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/spinner/Spinner.js":"16","/Users/hellojenny/Desktop/projects/react project/marvel/src/hooks/http.hook.js":"17","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/404.js":"18","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/SingleComicPage.js":"19","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/charSearchForm/CharSearchForm.js":"20","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/SinglePage.js":"21","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/singleComicLayout/SingleComicLayout.js":"22","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js":"23"},{"size":272,"mtime":1698255058472,"results":"24","hashOfConfig":"25"},{"size":1687,"mtime":1699460051495,"results":"26","hashOfConfig":"25"},{"size":883,"mtime":1698666428527,"results":"27","hashOfConfig":"25"},{"size":209,"mtime":1698663708159,"results":"28","hashOfConfig":"25"},{"size":1198,"mtime":1699458539683,"results":"29","hashOfConfig":"25"},{"size":249,"mtime":1698654576686,"results":"30","hashOfConfig":"25"},{"size":3429,"mtime":1698659611029,"results":"31","hashOfConfig":"25"},{"size":2806,"mtime":1698225302683,"results":"32","hashOfConfig":"25"},{"size":3191,"mtime":1698225435805,"results":"33","hashOfConfig":"25"},{"size":487,"mtime":1696608512000,"results":"34","hashOfConfig":"25"},{"size":522,"mtime":1629627299000,"results":"35","hashOfConfig":"25"},{"size":2496,"mtime":1698663297679,"results":"36","hashOfConfig":"25"},{"size":2597,"mtime":1699458084775,"results":"37","hashOfConfig":"25"},{"size":248,"mtime":1696258247203,"results":"38","hashOfConfig":"25"},{"size":666,"mtime":1629627051000,"results":"39","hashOfConfig":"25"},{"size":4551,"mtime":1696255456074,"results":"40","hashOfConfig":"25"},{"size":904,"mtime":1698157933322,"results":"41","hashOfConfig":"25"},{"size":500,"mtime":1698662900536,"results":"42","hashOfConfig":"25"},{"size":1831,"mtime":1698666846923,"results":"43","hashOfConfig":"25"},{"size":2818,"mtime":1699458787331,"results":"44","hashOfConfig":"25"},{"size":1747,"mtime":1699458855184,"results":"45","hashOfConfig":"25"},{"size":876,"mtime":1699459362340,"results":"46","hashOfConfig":"25"},{"size":529,"mtime":1699459309037,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1bhuevj",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"51"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/hellojenny/Desktop/projects/react project/marvel/src/index.js",[],[],["123"],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/app/App.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/appHeader/AppHeader.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/index.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/MainPage.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/ComicsPage.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/charList/CharList.js",["124"],[],"import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, SetnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect (() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? SetnewItemLoading(false) : SetnewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n                ended = true;\n            }\n\n        setCharList(charList => [...charList, ...newCharList]);\n        SetnewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 9);\n        setCharEnded(charEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n\n    function renderItems(arr) {\n    const items =  arr.map((item, i) => {\n        let imgStyle = {'objectFit' : 'cover'};\n        if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n            imgStyle = {'objectFit' : 'unset'};\n        }\n        \n        return (\n            <li \n                className=\"char__item\"\n                tabIndex={0}\n                key={item.id}\n                ref={el => itemRefs.current[i] = el}\n                onClick={() => {\n                    props.onCharSelected(item.id);\n                    focusOnItem(i);\n                }}\n                onKeyDown={(e) => {\n                    if (e.key === ' ' || e.key === \"Enter\") {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }\n                }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n            </li>\n        )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n}\n\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {items}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n            )\n    }\n\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/randomChar/RandomChar.js",["125"],[],"import { useEffect, useState } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState(null || {});\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n    }, [])\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage}className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/charInfo/CharInfo.js",["126"],["127"],"import { useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null); \n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect (() => {\n            updateChar();\n        }, [props.charId])\n\n    const updateChar = () => {\n        const {charId} = props;\n        if (!charId) {\n            return;\n        }\n            clearError();\n            getCharacter(charId)\n            .then(onCharLoaded)\n    }\n    \n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/>\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : 'There is no comics with this character'}\n                    {\n                        comics.map((item, i) => {\n                            // eslint-disable-next-line\n                            if (i > 9) return;\n                            return ( \n                                 <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                   \n                \n                </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/errorBoundary/ErrorBoundary.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/appBanner/AppBanner.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/comicsList/ComicsList.js",["128"],[],"import {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n                ended = true;\n            }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n    \n    function renderItems (arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                disabled={newItemLoading} \n                style={{'display' : comicsEnded ? 'none' : 'block'}}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","/Users/hellojenny/Desktop/projects/react project/marvel/src/services/MarvelService.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/errorMessage/ErrorMessage.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/skeleton/Skeleton.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/spinner/Spinner.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/hooks/http.hook.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/404.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/SingleComicPage.js",["129"],[],"import { Link, useParams } from 'react-router-dom';\nimport { useEffect, useState} from 'react';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './singleComicPage.scss';\n\nconst SingleComicPage = () => {\n    const {comicId} = useParams();\n    const [comic, setComic] = useState(null);\n    const {loading, error, getComic, clearError} = useMarvelService();\n\n\n    useEffect (() => {\n        updateComic();\n    }, [comicId])\n\n    const updateComic = () => {\n            clearError();\n            getComic(comicId)\n            .then(onComicLoaded)\n    }\n\n    const onComicLoaded = (comic) => {\n        setComic(comic);\n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nconst View = ({comic}) => {\n    const {title, description, pageCount, thumbnail, language, price} = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount}</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}\n\nexport default SingleComicPage;","/Users/hellojenny/Desktop/projects/react project/marvel/src/components/charSearchForm/CharSearchForm.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/SinglePage.js",["130","131"],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/singleComicLayout/SingleComicLayout.js",[],[],"/Users/hellojenny/Desktop/projects/react project/marvel/src/components/pages/singleCharacterLayout/SingleCharacterLayout.js",[],[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":19,"column":8,"nodeType":"136","endLine":19,"endColumn":10,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"138","line":16,"column":8,"nodeType":"136","endLine":16,"endColumn":10,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"138","line":19,"column":12,"nodeType":"136","endLine":19,"endColumn":26,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":83,"column":40,"nodeType":"143","messageId":"144","endLine":83,"endColumn":47,"suppressions":"145"},{"ruleId":"134","severity":1,"message":"135","line":22,"column":8,"nodeType":"136","endLine":22,"endColumn":10,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":18,"column":8,"nodeType":"136","endLine":18,"endColumn":17,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"149","line":20,"column":12,"nodeType":"136","endLine":20,"endColumn":16,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":25,"column":13,"nodeType":"153","messageId":"154","endLine":31,"endColumn":14},"no-new-object",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'offset' and 'onRequest'. Either include them or remove the dependency array.","ArrayExpression",["156"],"React Hook useEffect has a missing dependency: 'updateChar'. Either include it or remove the dependency array.",["157"],["158"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue",["159"],["160"],"React Hook useEffect has a missing dependency: 'updateComic'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["162"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-object-constructor",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"kind":"169","justification":"170"},{"desc":"163","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [offset, onRequest]",{"range":"176","text":"177"},"Update the dependencies array to be: [updateChar]",{"range":"178","text":"179"},"Update the dependencies array to be: [props.charId, updateChar]",{"range":"180","text":"181"},"directive","",{"range":"182","text":"177"},"Update the dependencies array to be: [comicId, updateComic]",{"range":"183","text":"184"},"Update the dependencies array to be: [id, updateData]",{"range":"185","text":"186"},[656,658],"[offset, onRequest]",[495,497],"[updateChar]",[527,541],"[props.charId, updateChar]",[656,658],[531,540],"[comicId, updateComic]",[787,791],"[id, updateData]"]